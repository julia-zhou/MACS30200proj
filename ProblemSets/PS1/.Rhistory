View(fi2016)
View(fi2016_stable)
View(new)
pcframe
aggregate_ca<-function(df){
df<-df %>% group_by(comm_area) %>% summarise(Score = mean(result))
return (df)
}
new <-aggregate_ca(fi2016_stable)
aggregate_ca<-function(df){
new<-df %>% group_by(comm_area) %>% summarise(Score = mean(result))
new$type <- df$type
new$caID <- df$caID
return (new)
}
fi2016_stable <-aggregate_ca(fi2016_stable)
fi2016_mobile <-aggregate_ca(fi2016_mobile)
fi2016_care <-aggregate_ca(fi2016_care)
aggregate_ca<-function(df){
new<-df %>% group_by(comm_area) %>% summarise(Score = mean(result))
new$type <- df$type[1]
return (new)
}
fi2016_stable <- fi2016[fi2016$type == "Stable",]
fi2016_mobile <- fi2016[fi2016$type == "Mobile",]
fi2016_care <- fi2016[fi2016$type == "Special_care",]
aggregate_ca<-function(df){
new<-df %>% group_by(comm_area) %>% summarise(Score = mean(result))
new$type <- df$type[1]
return (new)
}
fi2016_stable <-aggregate_ca(fi2016_stable)
fi2016_mobile <-aggregate_ca(fi2016_mobile)
fi2016_care <-aggregate_ca(fi2016_care)
View(fi2016_mobile)
View(fi2016_care)
View(fi2016_mobile)
View(fi2016_stable)
fi2016<-aggregate_ca(fi2016)
View(fi2016)
all <- read.csv("Food_Inspections.csv", stringsAsFactors = FALSE)
all$date<-as.Date(all$Inspection.Date,"%m/%d/%Y")
all$year <- year(all$date)
all$month <- month(all$date)
fi_16 <- all[ (all$year == 2016), ]
r <- c()
size <- lengths(fi_16[1])
for (i in 1: size){
if (fi_16$Results[i] == "Pass"){
r<-c(r,1)
}else if (fi_16$Results[i] == "Fail"){
r<-c(r,-1)
}else if (fi_16$Results[i] == "Pass w/ Conditions"){
r<-c(r,0.5)
}else{
r<-c(r,100)
}
}
fi_16$result<- r
fi_16 <- fi_16[ fi_16$result != 100, ]
variables <- c("year","month","result","Latitude","Longitude","Zip","DBA.Name", "Facility.Type")
fi2016<- with(fi_16,fi_16[,variables])
r <- c()
size <- lengths(fi_16[1])
for (i in 1: size){
if (fi_16$Results[i] == "Pass"){
r<-c(r,1)
}else if (fi_16$Results[i] == "Fail"){
r<-c(r,-1)
}else if (fi_16$Results[i] == "Pass w/ Conditions"){
r<-c(r,0.5)
}else{
r<-c(r,100)
}
}
fi_16
r <- c()
size <- lengths(fi_16[1])
for (i in 1: size){
if (fi_16$Results[i] == "Pass"){
r<-c(r,1)
}else if (fi_16$Results[i] == "Fail"){
r<-c(r,-1)
}else if (fi_16$Results[i] == "Pass w/ Conditions"){
r<-c(r,0.5)
}else{
r<-c(r,100)
}
}
View(fi2016)
setwd("/Users/NewPro/Desktop/Autumn 2016/Spatial data science/HW/Final project/Food inspection")
library(lubridate)
library(foreign)
library(dplyr)
library(sp)
library(rgdal)
library(maptools)
library(raster)
all <- read.csv("Food_Inspections.csv", stringsAsFactors = FALSE)
all$date<-as.Date(all$Inspection.Date,"%m/%d/%Y")
all$year <- year(all$date)
all$month <- month(all$date)
fi_16 <- all[ (all$year == 2016), ]
View(fi_16)
r <- c()
size <- lengths(fi_16[1])
for (i in 1: size){
if (fi_16$Results[i] == "Pass"){
r<-c(r,1)
}else if (fi_16$Results[i] == "Fail"){
r<-c(r,-1)
}else if (fi_16$Results[i] == "Pass w/ Conditions"){
r<-c(r,0.5)
}else{
r<-c(r,100)
}
}
fi_16$result<- r
fi_16 <- fi_16[ fi_16$result != 100, ]
variables <- c("year","month","result","Latitude","Longitude","Zip","DBA.Name", "Facility.Type")
fi2016<- with(fi_16,fi_16[,variables])
fi2016 <- fi2016[complete.cases(fi2016[,c('Longitude','Latitude')]),]
carea <- readShapePoly("Boundaries-ca", proj4string=CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'))
xy <- fi2016[,c('Longitude', 'Latitude')]
xy <- SpatialPointsDataFrame(coords = xy, data = fi2016,proj4string = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'))
community_area <-over(xy, carea)
fi2016$comm_area <- community_area$community
fi2016$caID <- community_area$area_numbe
Stable_food <- c("Restaurant", "Grocery Store", "Bakery", "RESTAURANT/GROCERY STORE", "RESTAURANT/GROCERY",
"TAVERN", "RESTAURANT/TAVERN", "GAS STATION/RESTAURANT", "GROCERY/BAKERY", "ICE CREAM SHOP",
"RESTAURANT/BAR", "BAKERY/RESTAURANT" , "restaurant", "ROOFTOP/RESTAURANT", "Reataurant/Bar",
"HOTEL", "donut shop", "tavern", "Cafeteria", "COFFEE ROASTER", "GAS STATION/STORE", "Cafeteria",
"GROCERY", "RESTAURANT/CATERING", 'CONVENIENCE','Liquor','DOLLAR & GROCERY STORE','Catering',
'Liquor','ice cream shop', "Coffee shop","ROOFTOP","ROOFTOPS","GROCERY/RESTAURANT")
Mobile_food <- c("Mobile Food Preparer", "Mobile Food Dispenser", "Mobile Prepared Food Vendor",
"MOBILPREPARED FOOD VENDOR", "MOBILE FOOD TRUCK", "MOBILE FROZEN DESSERT VENDOR")
Special_care <- c("Children's Services Facility", "Daycare (2 - 6 Years)", "Long Term Care",
"Daycare Above and Under 2 Years", "Hospital","Daycare (Under 2 Years)",
"School", "PRIVATE SCHOOL", "DAYCARE", "CHURCH", "Daycare Night",
"1023-CHILDREN'S SERVICES FACILITY", "LONG TERM CARE", "Daycare (2 Years)",
"PUBLIC SHCOOL", "LONG TERM CARE", "NURSING HOME", "COLLEGE", 'Daycare Combo 1586',
"1023 CHILDREN'S SERVICES FACILITY")
l <- c()
size <- lengths(fi2016[1])
for (i in 1: size){
if (fi2016$Facility.Type[i] %in% Stable_food){
l<-c(l,"Stable")
}else if (fi2016$Facility.Type[i] %in% Mobile_food){
l<-c(l,"Mobile")
}else if (fi2016$Facility.Type[i] %in% Special_care){
l<-c(l,"Special_care")
}else{
l<-c(l,"nolabel")
}
}
fi2016$type<- l
fi2016_stable <- fi2016[fi2016$type == "Stable",]
fi2016_mobile <- fi2016[fi2016$type == "Mobile",]
fi2016_care <- fi2016[fi2016$type == "Special_care",]
aggregate_ca<-function(df){
new<-df %>% group_by(comm_area) %>% summarise(Score = mean(result))
new$type <- df$type[1]
return (new)
}
fi2016_stable <-aggregate_ca(fi2016_stable)
fi2016_mobile <-aggregate_ca(fi2016_mobile)
fi2016_care <-aggregate_ca(fi2016_care)
fi2016_all<-aggregate_ca(fi2016)
View(fi2016_all)
View(fi2016)
fi2016 <- fi2016[complete.cases(fi2016[,'comm_area']),]
unique(fi2016$Facility.Type)
Stable_food <- c("Restaurant", "Grocery Store", "Bakery", "RESTAURANT/GROCERY STORE", "RESTAURANT/GROCERY",
"TAVERN", "RESTAURANT/TAVERN", "GAS STATION/RESTAURANT", "GROCERY/BAKERY", "ICE CREAM SHOP",
"RESTAURANT/BAR", "BAKERY/RESTAURANT" , "restaurant", "ROOFTOP/RESTAURANT", "Reataurant/Bar",
"HOTEL", "donut shop", "tavern", "Cafeteria", "COFFEE ROASTER", "GAS STATION/STORE", "Cafeteria",
"GROCERY", "RESTAURANT/CATERING", 'CONVENIENCE','Liquor','DOLLAR & GROCERY STORE','Catering',
'Liquor','ice cream shop', "Coffee shop","ROOFTOP","ROOFTOPS","GROCERY/RESTAURANT")
Mobile_food <- c("Mobile Food Preparer", "Mobile Food Dispenser", "Mobile Prepared Food Vendor",
"MOBILPREPARED FOOD VENDOR", "MOBILE FOOD TRUCK", "MOBILE FROZEN DESSERT VENDOR")
Special_care <- c("Children's Services Facility", "Daycare (2 - 6 Years)", "Long Term Care",
"Daycare Above and Under 2 Years", "Hospital","Daycare (Under 2 Years)",
"School", "PRIVATE SCHOOL", "DAYCARE", "CHURCH", "Daycare Night",
"1023-CHILDREN'S SERVICES FACILITY", "LONG TERM CARE", "Daycare (2 Years)",
"PUBLIC SHCOOL", "LONG TERM CARE", "NURSING HOME", "COLLEGE", 'Daycare Combo 1586',
"1023 CHILDREN'S SERVICES FACILITY")
l <- c()
size <- lengths(fi2016[1])
for (i in 1: size){
if (fi2016$Facility.Type[i] %in% Stable_food){
l<-c(l,"Stable")
}else if (fi2016$Facility.Type[i] %in% Mobile_food){
l<-c(l,"Mobile")
}else if (fi2016$Facility.Type[i] %in% Special_care){
l<-c(l,"Special_care")
}else{
l<-c(l,"nolabel")
}
}
fi2016$type<- l
fi2016_stable <- fi2016[fi2016$type == "Stable",]
fi2016_mobile <- fi2016[fi2016$type == "Mobile",]
fi2016_care <- fi2016[fi2016$type == "Special_care",]
#aggregate according to community area
aggregate_ca<-function(df){
new<-df %>% group_by(comm_area) %>% summarise(Score = mean(result))
new$type <- df$type[1]
return (new)
}
fi2016_stable <-aggregate_ca(fi2016_stable)
fi2016_mobile <-aggregate_ca(fi2016_mobile)
fi2016_care <-aggregate_ca(fi2016_care)
fi2016_all<-aggregate_ca(fi2016)
complete_ca<-function(df){
for( i in 1：77){
if fi2016_all$comm_area[i] ! %in% df$comm_area{
df <- rbind(df, “c(fi2016_all$comm_area[i], 100, df$type[1]))
}
}
return (new)
}
complete_ca<-function(df){
for( i in 1：77){
if fi2016_all$comm_area[i] ! %in% df$comm_area{
df <- rbind(df, “c(fi2016_all$comm_area[i], 100, df$type[1]))
}
}
return (new)
}
complete_ca<-function(df){
for( i in 1:77){
if (!(fi2016_all$comm_area[i] %in% df$comm_area)){
df <- rbind(df, c(fi2016_all$comm_area[i], 100, df$type[1]))
}
}
return (new)
}
fi2016_stable <-complete_ca(fi2016_stable)
fi2016_mobile <-complete_ca(fi2016_mobile)
fi2016_care <-complete_ca(fi2016_care)
complete_ca<-function(df){
for( i in 1:77){
if (!(fi2016_all$comm_area[i] %in% df$comm_area)){
df <- rbind(df, c(fi2016_all$comm_area[i], 100, df$type[1]))
}
}
return (df)
}
fi2016_stable <-complete_ca(fi2016_stable)
fi2016_stable <- fi2016[fi2016$type == "Stable",]
fi2016_mobile <- fi2016[fi2016$type == "Mobile",]
fi2016_care <- fi2016[fi2016$type == "Special_care",]
#aggregate according to community area
aggregate_ca<-function(df){
new<-df %>% group_by(comm_area) %>% summarise(Score = mean(result))
new$type <- df$type[1]
return (new)
}
fi2016_stable <-aggregate_ca(fi2016_stable)
fi2016_mobile <-aggregate_ca(fi2016_mobile)
fi2016_care <-aggregate_ca(fi2016_care)
fi2016_all<-aggregate_ca(fi2016)
complete_ca<-function(df){
for( i in 1:77){
if (!(fi2016_all$comm_area[i] %in% df$comm_area)){
df <- rbind(df, c(fi2016_all$comm_area[i], 100, df$type[1]))
}
}
return (df)
}
fi2016_stable <-complete_ca(fi2016_stable)
fi2016_mobile <-complete_ca(fi2016_mobile)
fi2016_care <-complete_ca(fi2016_care)
View(fi2016_stable)
View(fi2016_mobile)
fi2016_all$comm_area[1]
type(fi2016_all$comm_area[1])
typeof(fi2016_all$comm_area[1])
typeof(str(fi2016_all$comm_area[1])
typeof(str(fi2016_all$comm_area[1])
typeof(str(fi2016_all$comm_area[1]))
typeof(fi2016_all$comm_area[1])
df$type[1]
typeof(fi2016_stable$comm_area[1])
complete_ca<-function(df){
for( i in 1:77){
if (!(fi2016_all$comm_area[i] %in% df$comm_area)){
print(fi2016_all$comm_area[i])
df <- rbind(df, c(fi2016_all$comm_area[i], 100, df$type[1]))
}
}
return (df)
}
complete_ca(fi2016_stable)
fi2016_stable <-complete_ca(fi2016_stable)
setwd("/Users/NewPro/Desktop/Autumn 2016/Spatial data science/HW/Final project/Food inspection")
all <- read.csv("Food_Inspections.csv", stringsAsFactors = FALSE)
all$date<-as.Date(all$Inspection.Date,"%m/%d/%Y")
all$year <- year(all$date)
all$month <- month(all$date)
fi_16 <- all[ (all$year == 2016), ]
r <- c()
size <- lengths(fi_16[1])
for (i in 1: size){
if (fi_16$Results[i] == "Pass"){
r<-c(r,1)
}else if (fi_16$Results[i] == "Fail"){
r<-c(r,-1)
}else if (fi_16$Results[i] == "Pass w/ Conditions"){
r<-c(r,0.5)
}else{
r<-c(r,100)
}
}
fi_16$result<- r
fi_16 <- fi_16[ fi_16$result != 100, ]
variables <- c("year","month","result","Latitude","Longitude","Zip","DBA.Name", "Facility.Type")
fi2016<- with(fi_16,fi_16[,variables])
#head(fi2016)
#dim(fi2016)
#write.csv(fi2016,"fi2016.csv",row.names=FALSE)
#take out points withother either longitude or latitude
fi2016 <- fi2016[complete.cases(fi2016[,c('Longitude','Latitude')]),]
carea <- readShapePoly("Boundaries-ca", proj4string=CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'))
xy <- fi2016[,c('Longitude', 'Latitude')]
xy <- SpatialPointsDataFrame(coords = xy, data = fi2016,proj4string = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'))
community_area <-over(xy, carea)
fi2016$comm_area <- community_area$community
fi2016$caID <- community_area$area_numbe
fi2016 <- fi2016[complete.cases(fi2016[,'comm_area']),]
fi2016 <- data.frame(fi2016, stringsAsFactors=FALSE)
typeof(fi2016$comm_area[1])
fi2016$comm_area <- as.character(fi2016$comm_area)
typeof(fi2016$comm_area[1])
unique(fi2016$Facility.Type)
Stable_food <- c("Restaurant", "Grocery Store", "Bakery", "RESTAURANT/GROCERY STORE", "RESTAURANT/GROCERY",
"TAVERN", "RESTAURANT/TAVERN", "GAS STATION/RESTAURANT", "GROCERY/BAKERY", "ICE CREAM SHOP",
"RESTAURANT/BAR", "BAKERY/RESTAURANT" , "restaurant", "ROOFTOP/RESTAURANT", "Reataurant/Bar",
"HOTEL", "donut shop", "tavern", "Cafeteria", "COFFEE ROASTER", "GAS STATION/STORE", "Cafeteria",
"GROCERY", "RESTAURANT/CATERING", 'CONVENIENCE','Liquor','DOLLAR & GROCERY STORE','Catering',
'Liquor','ice cream shop', "Coffee shop","ROOFTOP","ROOFTOPS","GROCERY/RESTAURANT")
Mobile_food <- c("Mobile Food Preparer", "Mobile Food Dispenser", "Mobile Prepared Food Vendor",
"MOBILPREPARED FOOD VENDOR", "MOBILE FOOD TRUCK", "MOBILE FROZEN DESSERT VENDOR")
Special_care <- c("Children's Services Facility", "Daycare (2 - 6 Years)", "Long Term Care",
"Daycare Above and Under 2 Years", "Hospital","Daycare (Under 2 Years)",
"School", "PRIVATE SCHOOL", "DAYCARE", "CHURCH", "Daycare Night",
"1023-CHILDREN'S SERVICES FACILITY", "LONG TERM CARE", "Daycare (2 Years)",
"PUBLIC SHCOOL", "LONG TERM CARE", "NURSING HOME", "COLLEGE", 'Daycare Combo 1586',
"1023 CHILDREN'S SERVICES FACILITY")
l <- c()
size <- lengths(fi2016[1])
for (i in 1: size){
if (fi2016$Facility.Type[i] %in% Stable_food){
l<-c(l,"Stable")
}else if (fi2016$Facility.Type[i] %in% Mobile_food){
l<-c(l,"Mobile")
}else if (fi2016$Facility.Type[i] %in% Special_care){
l<-c(l,"Special_care")
}else{
l<-c(l,"nolabel")
}
}
fi2016$type<- l
#obtain a separate dataframe for each type
fi2016_stable <- fi2016[fi2016$type == "Stable",]
fi2016_mobile <- fi2016[fi2016$type == "Mobile",]
fi2016_care <- fi2016[fi2016$type == "Special_care",]
#aggregate according to community area
aggregate_ca<-function(df){
new<-df %>% group_by(comm_area) %>% summarise(Score = mean(result))
new$type <- df$type[1]
return (new)
}
fi2016_stable <-aggregate_ca(fi2016_stable)
fi2016_mobile <-aggregate_ca(fi2016_mobile)
fi2016_care <-aggregate_ca(fi2016_care)
fi2016_all<-aggregate_ca(fi2016)
#assign 100 to areas that do not show up in the each type dataframe
complete_ca<-function(df){
for( i in 1:77){
if (!(fi2016_all$comm_area[i] %in% df$comm_area)){
print(fi2016_all$comm_area[i])
df <- rbind(df, c(fi2016_all$comm_area[i], 100, df$type[1]))
}
}
return (df)
}
typeof(fi2016_stable$comm_area[1])
typeof(fi2016_all$comm_area[1])
fi2016_stable <-complete_ca(fi2016_stable)
fi2016_mobile <-complete_ca(fi2016_mobile)
fi2016_care <-complete_ca(fi2016_care)
write.csv(fi2016_all,"fi2016_allFacilityTypes.csv",row.names=FALSE)
write.csv(fi2016_stable,"fi2016_stable.csv",row.names=FALSE)
write.csv(fi2016_mobile,"fi2016_mobile.csv",row.names=FALSE)
write.csv(fi2016_care,"fi2016_care.csv",row.names=FALSE)
library(ggplot2)
data <- read.dbf("ComArea_ACS14_f.dbf")
data <- read.dbf("ComArea_ACS14_f.dbf")
View(all)
View(data)
data <- read.dbf("HealthIndicator.dbf")
colnames(data)
variables<-c("BirthRate", "Gener_Rate", "Prena_ster", "Breas_ales", "Cance_ites", "Color_ncer","Diabe_ated",
variables<-c("BirthRate", "Gener_Rate", "Prena_ster", "Breas_ales", "Cance_ites", "Color_ncer","Diabe_ated",
"Infan_Rate", "LungCancer","Prost_ales", "Strok_ease", "Chil_ing_1", "Gonor_ales" "Gono_les_1",
"Tuber_osis","Assau_cide", "Below_evel", "NoHig_loma","PerCa_come")
variables<-c("BirthRate", "Gener_Rate", "Prena_ster", "Breas_ales", "Cance_ites", "Color_ncer","Diabe_ated",
"Infan_Rate", "LungCancer","Prost_ales", "Strok_ease", "Chil_ing_1", "Gonor_ales" "Gono_les_1",
"Tuber_osis","Assau_cide", "Below_evel", "NoHig_loma","PerCa_come")
variables<-c("BirthRate", "Gener_Rate", "Prena_ster", "Breas_ales", "Cance_ites", "Color_ncer","Diabe_ated",
"Infan_Rate", "LungCancer","Prost_ales", "Strok_ease", "Chil_ing_1", "Gonor_ales", "Gono_les_1",
"Tuber_osis","Assau_cide", "Below_evel", "NoHig_loma","PerCa_come")
selected <- data[, variables]
selected_data <- data[, variables]
View(selected_data)
selected_data <- scale(data[, variables])
prc <- prcomp(selected_data)
summary(prc)
scree_plot <- function(princ,cumulative=FALSE)
{
pv <- princ$sdev^2
pve <- pv / sum(pv)
mtitle="Scree Plot"
if (cumulative){
pve <- cumsum(pve)
mtitle="Cumulative Variance Proportion"
}
plot(pve,type="b",main=mtitle,xlab="Principal Components",
ylab="Proportion Variance Explained")
}
scree_plot(prc)
scree_plot(prc,cumulative=TRUE)
pcld <- prc$rotation
pcld
pcscores <- prc$x
pcs1 <- as.data.frame(pcscores)
pcs1$AREA_ID <- as.integer(data$area_num)
ggplot(pcs1,aes(x=PC1,y=PC2)) +
geom_point() + geom_text(aes(label=AREA_ID),nudge_y=+0.3)
biplot(prc,scale=0)
vdiss <- dist(selected)
vmds <- cmdscale(vdiss)
datmds <- as.data.frame(vmds)
datmds$AID <- as.integer(data$area_num)
ggplot(datmds,aes(x=V1,y=V2)) +
geom_point() + geom_text(aes(label=AID),nudge_y=+0.2)
library(spdep)
View(pcs1)
write.dbf(pcs1,"pcs.dbf")
chicago <- readShapePoly("HealthIndicator_withpc.shp")
chicago <- readShapePoly("HealthIndicators_withpc.shp")
plot(chicago,border=gray(0.5))
vars <- c("PC1","PC2","PC3","PC4")
dat <- data.frame(chicago@data[,vars])
sdat <- scale(dat)
chicago.nb <- poly2nb(chicago)
plot(chicago,border=gray(.5))
plot(chicago.nb,coordinates(chicago),col="blue",add=TRUE)
lcosts <- nbcosts(chicago.nb,sdat)
chicago.w <- nb2listw(chicago.nb,lcosts,style="B")
chicago.mst <- mstree(chicago.w)
plot(chicago.mst,coordinates(chicago),col="blue",
cex.lab=0.7)
plot(chicago,border=gray(.5),add=TRUE)
plot(chicago.mst,coordinates(chicago),col="blue",
cex.lab=0.7)
clus4 <- skater(chicago.mst[,1:2],sdat,3)
str(clus4)
plot(clus4,coordinates(chicago),cex.lab=.7,
groups.colors=c("red","green","blue","brown"))
plot(clus4,coordinates(chicago),cex.lab=.7,
groups.colors=c("red","green","blue","purple"))
plot(chicago,border=gray(.5),add=TRUE)
plot(chicago,col=c("red","green","blue","brown")[clus4$groups])
plot(chicago,col=c("red","green","blue","purple")[clus4$groups])
plot(chicago,col=c("red","green","blue","yellow")[clus4$groups])
plot(clus4,coordinates(chicago),cex.lab=.7,
groups.colors=c("red","green","blue","yellow"))
plot(chicago,border=gray(.5),add=TRUE)
biplot(prc,scale=0)
plot(clus4,coordinates(chicago),cex.lab=.7,
groups.colors=c("red","green","blue","yellow"))
plot(chicago,border=gray(.5),add=TRUE)
plot(chicago,col=c("red","green","blue","yellow")[clus4$groups])
clus6 <- skater(chicago.mst[,1:2],sdat,5)
ccs6 <- clus6$groups
plot(clus6,coordinates(chicago),cex.lab=.7,
groups.colors=c("red","green","blue","brown","gray","yellow"))
plot(chicago,border=gray(.5),add=TRUE)
plot(chicago,col=c("red","green","blue","brown","gray","yellow")[clus6$groups])
fi2016_stable[fi2016_stable$Score != 100]
fi2016_stable[,fi2016_stable$Score != 100]
fi2016_stable[fi2016_stable$Score != 100,]
summary(fi2016_stable[fi2016_stable$Score != 100,]$Score)
summary(int(fi2016_stable[fi2016_stable$Score != 100,]$Score))
transform(fi2016_stable[fi2016_stable$Score != 100,], Score= as,numeric(Score))
transform(fi2016_stable[fi2016_stable$Score != 100,], Score= as.numeric(Score))
summary(transform(fi2016_stable[fi2016_stable$Score != 100,], Score= as.numeric(Score)))
sd(transform(fi2016_stable[fi2016_stable$Score != 100,], Score= as.numeric(Score)))
sd(transform(fi2016_stable[fi2016_stable$Score != 100,], Score= as.numeric(Score))$Score)
summary(transform(fi2016_mobile[fi2016_mobile$Score != 100,], Score= as.numeric(Score)))
sd(transform(fi2016_mobile[fi2016_mobile$Score != 100,], Score= as.numeric(Score))$Score)
summary(transform(fi2016_care[fi2016_care$Score != 100,], Score= as.numeric(Score)))
sd(transform(fi2016_care[fi2016_care$Score != 100,], Score= as.numeric(Score))$Score)
setwd("~/Desktop/github/MACS30200proj/ProblemSets/PS1")
all <- read.csv("Food_Inspections.csv", stringsAsFactors = FALSE)
summary(all)
View(all)
knitr::opts_chunk$set(echo = TRUE)
all$risk
all$Risk
